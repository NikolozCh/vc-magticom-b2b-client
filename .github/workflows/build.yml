name: Java CI with Maven and SonarQube Analysis

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-analyze:
    name: Build and Analyze with SonarQube
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Necessary for a complete history for SonarQube analysis

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn -B clean verify --file pom.xml

    - name: List compiled classes
      run: |
        echo "Listing compiled classes..."
        ls -l target/classes

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      with:
        args: >
          -Dsonar.projectKey=Nikusharoot_magticom-b2b-client
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          -Dsonar.java.binaries=target/classes
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    # Optionally, add a step to check the SonarQube Quality Gate status.
    # Uncomment the following lines if you want your workflow to fail based on the Quality Gate status.
    # - name: SonarQube Quality Gate check
    #   uses: sonarsource/sonarqube-quality-gate-action@master
    #   env:
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
